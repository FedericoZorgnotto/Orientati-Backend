"""Aggiunta gestione genitori e fasce orarie

Revision ID: 537921d9f3ad
Revises: c90c5e48dfc6
Create Date: 2025-02-22 16:01:56.379690

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '537921d9f3ad'
down_revision: Union[str, None] = 'c90c5e48dfc6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Controllo se la tabella esiste prima di eseguire le operazioni
    try:
        # Prima rimuovere la foreign key che utilizza l'indice
        op.drop_constraint('fk_user_action_logs_utente_id', 'user_action_logs', type_='foreignkey')

        # Poi rimuovere l'indice
        op.drop_index('ix_user_action_logs_utente_id', table_name='user_action_logs')
    except Exception as e:
        # Probabilmente la tabella non esiste più, continua con la migrazione
        print(f"Non è stato possibile eliminare vincoli da user_action_logs: {e}")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Date',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('data', sa.String(255), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('Genitori',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('nome', sa.String(100), nullable=False),
                    sa.Column('cognome', sa.String(100), nullable=False),
                    sa.Column('mail', sa.String(255), nullable=False),
                    sa.Column('comune', sa.String(100), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('FasceOrarie',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('data_id', sa.Integer(), nullable=False),
                    sa.Column('oraInizio', sa.String(10), nullable=False),
                    sa.Column('percorso_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['data_id'], ['Date.id'], ),
                    sa.ForeignKeyConstraint(['percorso_id'], ['Percorsi.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('Ragazzi',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('nome', sa.String(100), nullable=False),
                    sa.Column('cognome', sa.String(100), nullable=False),
                    sa.Column('scuolaDiProvenienza_id', sa.Integer(), nullable=False),
                    sa.Column('genitore_id', sa.Integer(), nullable=False),
                    sa.Column('indirizzoDiInteresse_1_id', sa.Integer(), nullable=False),
                    sa.Column('indirizzoDiInteresse_2_id', sa.Integer(), nullable=True),
                    sa.Column('indirizzoDiInteresse_3_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['genitore_id'], ['Genitori.id'], ),
                    sa.ForeignKeyConstraint(['indirizzoDiInteresse_1_id'], ['Indirizzi.id'], ),
                    sa.ForeignKeyConstraint(['indirizzoDiInteresse_2_id'], ['Indirizzi.id'], ),
                    sa.ForeignKeyConstraint(['indirizzoDiInteresse_3_id'], ['Indirizzi.id'], ),
                    sa.ForeignKeyConstraint(['scuolaDiProvenienza_id'], ['ScuoleDiProvenienza.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('Iscrizioni',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('gruppo_id', sa.Integer(), nullable=True),
                    sa.Column('fasciaOraria_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['fasciaOraria_id'], ['FasceOrarie.id'], ),
                    sa.ForeignKeyConstraint(['gruppo_id'], ['Gruppi.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('association_ragazzi_iscrizioni',
                    sa.Column('ragazzo_id', sa.Integer(), nullable=False),
                    sa.Column('iscrizione_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['iscrizione_id'], ['Iscrizioni.id'], ),
                    sa.ForeignKeyConstraint(['ragazzo_id'], ['Ragazzi.id'], ),
                    sa.PrimaryKeyConstraint('ragazzo_id', 'iscrizione_id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('association_ragazzi_iscrizioni')
    op.drop_table('Iscrizioni')
    op.drop_table('Ragazzi')
    op.drop_table('FasceOrarie')
    op.drop_table('Genitori')
    op.drop_table('Date')
    # ### end Alembic commands ###
