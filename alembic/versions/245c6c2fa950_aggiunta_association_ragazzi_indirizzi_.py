"""aggiunta association ragazzi-indirizzi di interesse

Revision ID: 245c6c2fa950
Revises: 2f8e83ac5687
Create Date: 2025-03-03 12:21:34.444532

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy import inspect

# revision identifiers, used by Alembic.
revision: str = '245c6c2fa950'
down_revision: Union[str, None] = '2f8e83ac5687'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def get_foreign_keys(connection, table_name):
    """Recupera tutti i vincoli di chiave esterna per una tabella."""
    inspector = inspect(connection)
    return inspector.get_foreign_keys(table_name)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Prima identifichiamo e rimuoviamo i vincoli di chiave esterna esistenti
    conn = op.get_bind()

    # Identifica i vincoli di chiave esterna nella tabella Ragazzi
    foreign_keys = get_foreign_keys(conn, 'Ragazzi')

    with op.batch_alter_table('Ragazzi', schema=None) as batch_op:
        # Rimuovi tutti i vincoli di chiave esterna che abbiamo trovato
        for fk in foreign_keys:
            if fk.get('name'):
                batch_op.drop_constraint(fk['name'], type_='foreignkey')

        # Ora possiamo rimuovere le colonne in sicurezza
        batch_op.drop_column('indirizzoDiInteresse_1_id')
        batch_op.drop_column('indirizzoDiInteresse_2_id')
        batch_op.drop_column('indirizzoDiInteresse_3_id')

    # Creiamo la nuova tabella di associazione
    op.create_table('association_ragazzi_indirizzi',
                    sa.Column('ragazzo_id', sa.Integer(), nullable=True),
                    sa.Column('indirizzoDiInteresse_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['indirizzoDiInteresse_id'], ['Indirizzi.id'], ),
                    sa.ForeignKeyConstraint(['ragazzo_id'], ['Ragazzi.id'], )
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('association_ragazzi_indirizzi')

    with op.batch_alter_table('Ragazzi', schema=None) as batch_op:
        batch_op.add_column(sa.Column('indirizzoDiInteresse_1_id', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('indirizzoDiInteresse_2_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('indirizzoDiInteresse_3_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key('fk_ragazzi_indirizzoDiInteresse_1', 'Indirizzi', ['indirizzoDiInteresse_1_id'],
                                    ['id'])
        batch_op.create_foreign_key('fk_ragazzi_indirizzoDiInteresse_2', 'Indirizzi', ['indirizzoDiInteresse_2_id'],
                                    ['id'])
        batch_op.create_foreign_key('fk_ragazzi_indirizzoDiInteresse_3', 'Indirizzi', ['indirizzoDiInteresse_3_id'],
                                    ['id'])
    # ### end Alembic commands ###